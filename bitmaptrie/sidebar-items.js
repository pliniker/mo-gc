initSidebarItems({"constant":[["USIZE_BYTES",""],["VALID_MAX","First value to use in CompVec::next(masked__valid, ...)"],["WORD_SIZE",""]],"enum":[["TrieNode","An interior (branch) or exterior (leaf) trie node, defined recursively."]],"struct":[["BorrowShardImmut","Borrows a BorrowSync, splitting it into interior nodes each of which can be iterated over separately while still giving access to the full Trie."],["BorrowShardMut","Type that borrows a Trie mutably, giving an iterable type that returns interior nodes on which structure-mutating operations can be performed. This can be used to parallelize destructive operations."],["BorrowSync","Borrows a Trie exposing a Sync-type-safe subset of it's methods. No structure modifying methods are included. Each borrow gets it's own path cache. The lifetime of this type is the lifetime of the mutable borrow. This can be used to parallelize structure-immutant changes."],["CompVec","A simple sparse vector.  The `valid` word is a bitmap of which indeces have values.  The maximum size of this vector is equal to the number of bits in a word (32 or 64)."],["Iter","A type that implements Iterator for CompVec"],["Iter","Iterator over `(key, &T)`s of `Trie<T>`"],["IterMut","A type that implements Iterator for mutable values of CompVec"],["IterMut","Iterator over mutable `(key, &mut T)`s of `Trie<T>`"],["ShardImmut","Immutable borrow of an interior Trie node."],["ShardMut","A type that references an interior Trie node. For splitting a Trie into sub-nodes, each of which can be passed to a different thread for mutable structural changes."],["Trie","Path-cached bitmap trie type. The key is always a `usize`."]]});